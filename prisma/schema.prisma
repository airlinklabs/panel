  generator client {
    provider = "prisma-client-js"
  }

  datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
  }

  model Users {
    id          Int      @id @default(autoincrement())
    email       String   @unique
    username    String?  @unique
    password    String
    isAdmin     Boolean  @default(false)
    description String?  @default("No About Me")
    servers     Server[]
  }

  model Session {
    id         String   @id @default(cuid())
    session_id String   @unique
    data       String
    expires    DateTime
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
  }

  model Server {
    id        Int      @id @default(autoincrement())
    UUID      String   @unique @default(uuid())
    name      String
    description String?
    createdAt DateTime @default(now())
    Ports     String
    Memory    Int
    Cpu       Int
    Storage   Int
    Variables String?
    StartCommand String?
    dockerImage String?
    Installing Boolean @default(true)
    Suspended Boolean  @default(false)
    ownerId   Int
    nodeId    Int
    imageId   Int
    node      Node     @relation(fields: [nodeId], references: [id])
    owner     Users    @relation(fields: [ownerId], references: [id])
    image     Images   @relation(fields: [imageId], references: [id])
  }

model Images {
  id          Int      @id @default(autoincrement())
  UUID        String   @unique @default(uuid())
  name        String?
  description String?
  author      String?
  authorName  String?
  createdAt   DateTime @default(now())
  meta        String?
  dockerImages String?
  startup     String?
  info        String?
  scripts     String?
  variables   String?

  servers     Server[]
}

  model Location {
    id          Int      @id @default(autoincrement())
    UUID        String   @unique @default(uuid())
    shortCode   String   @unique
    name        String
    description String?
    latitude    Float?
    longitude   Float?
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    nodes       Node[]
  }

  model Node {
    id          Int      @id @default(autoincrement())
    name        String
    ram         BigInt   @default(0)
    cpu         BigInt   @default(0)
    disk        Int      @default(0)
    address     String   @default("127.0.0.1")
    port        Int      @default(3001)
    key         String
    locationId  Int?
    location    Location? @relation(fields: [locationId], references: [id])
    createdAt   DateTime @default(now())
    servers     Server[]
  }

model settings {
  id          Int      @id @default(autoincrement())
  title       String @default("Airlink")
  description String @default("AirLink is a free and open source project by AirlinkLabs")
  logo      String @default("../assets/logo.png")
  theme     String @default("default")
  language  String @default("en")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ApiKey {
  id        Int      @id @default(autoincrement())
  key       String   @unique
  createdAt DateTime @default(now())
  active    Boolean  @default(true)
}