<%- include('../../components/header', { title: 'Server Settings' }) %>

<main class="h-screen m-auto text-white">
  <div class="flex h-screen">
    <!-- Sidebar -->
<div class="hidden sm:block w-60 h-full">
  <%- include('../../components/template') %>
</div>

<!-- Mobile button -->
    <div class="block lg:hidden">
    <%- include('../../components/mobile') %>
    </div>


    <!-- Main Content -->
    <section class="flex-1 p-6 overflow-y-auto pt-16">

<!-- Mobile hamburger -->
<div class="sm:hidden p-2">
  <button id="mobileMenuToggle" class="p-2 text-neutral-700 dark:text-neutral-300">
    &#9776;
  </button>
</div>

<!-- Mobile overlay -->
<div id="mobileMenuOverlay" class="hidden sm:hidden fixed inset-0 bg-black bg-opacity-70 z-50">
  <div class="bg-white dark:bg-neutral-900 w-64 h-full p-4 shadow-lg overflow-y-auto">
    <button id="closeMobileMenu" class="text-neutral-700 dark:text-neutral-300 text-xl mb-4">&times;</button>
    <ul role="list" class="flex flex-col items-start mt-1.5 gap-y-1 text-sm font-normal leading-6 text-neutral-600 dark:text-neutral-400">
                <%
                const mobMenuItems = global.uiComponentStore ? global.uiComponentStore.getServerMenuItems() : [];
                if (!mobMenuItems || mobMenuItems.length === 0) {
                %>
                <li class="transition">
                   <a href="/server/<%= server.UUID %>" class="block w-full text-left px-3 py-1.5 rounded-lg transition border border-transparent hover:bg-neutral-100 dark:hover:bg-white/5 hover:text-neutral-900 dark:hover:text-white hover:shadow data-[active=true]:bg-neutral-200 data-[active=true]:border-neutral-300 dark:data-[active=true]:bg-white/10 dark:data-[active=true]:border-neutral-300/20 data-[active=true]:text-neutral-900 dark:data-[active=true]:text-white data-[active=true]:font-medium data-[active=true]:shadow-sm">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-5 mb-0.5 inline-flex mr-1">
                      <path fill-rule="evenodd" d="M2.25 6a3 3 0 0 1 3-3h13.5a3 3 0 0 1 3 3v12a3 3 0 0 1-3 3H5.25a3 3 0 0 1-3-3V6Zm3.97.97a.75.75 0 0 1 1.06 0l2.25 2.25a.75.75 0 0 1 0 1.06l-2.25 2.25a.75.75 0 0 1-1.06-1.06l1.72-1.72-1.72-1.72a.75.75 0 0 1 0-1.06Zm4.28 4.28a.75.75 0 0 0 0 1.5h3a.75.75 0 0 0 0-1.5h-3Z" clip-rule="evenodd" />
                    </svg>
                     Console
                  </a>
                </li>
                <li class="transition">
                   <a href="/server/<%= server.UUID %>/files" class="block w-full text-left px-3 py-1.5 rounded-lg transition border border-transparent hover:bg-neutral-100 dark:hover:bg-white/5 hover:text-neutral-900 dark:hover:text-white hover:shadow data-[active=true]:bg-neutral-200 data-[active=true]:border-neutral-300 dark:data-[active=true]:bg-white/10 dark:data-[active=true]:border-neutral-300/20 data-[active=true]:text-neutral-900 dark:data-[active=true]:text-white data-[active=true]:font-medium data-[active=true]:shadow-sm">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-5 mb-0.5 inline-flex mr-1">
                      <path d="M19.906 9c.382 0 .749.057 1.094.162V9a3 3 0 0 0-3-3h-3.879a.75.75 0 0 1-.53-.22L11.47 3.66A2.25 2.25 0 0 0 9.879 3H6a3 3 0 0 0-3 3v3.162A3.756 3.756 0 0 1 4.094 9h15.812ZM4.094 10.5a2.25 2.25 0 0 0-2.227 2.568l.857 6A2.25 2.25 0 0 0 4.951 21H19.05a2.25 2.25 0 0 0 2.227-1.932l.857-6a2.25 2.25 0 0 0-2.227-2.568H4.094Z" />
                    </svg>
                      Files
                   </a>
                </li>
                <% if (features.includes('players')) { %>
                <li class="transition">
                  <a href="/server/<%= server.UUID %>/players" class="block w-full text-left px-3 py-1.5 rounded-lg transition border border-transparent hover:bg-neutral-100 dark:hover:bg-white/5 hover:text-neutral-900 dark:hover:text-white hover:shadow data-[active=true]:bg-neutral-200 data-[active=true]:border-neutral-300 dark:data-[active=true]:bg-white/10 dark:data-[active=true]:border-neutral-300/20 data-[active=true]:text-neutral-900 dark:data-[active=true]:text-white data-[active=true]:font-medium data-[active=true]:shadow-sm">
                    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" viewBox="0 0 256 256" class="size-5 mb-0.5 inline-flex mr-1"><path d="M100,124a12,12,0,1,1,12-12A12,12,0,0,1,100,124Zm56-24a12,12,0,1,0,12,12A12,12,0,0,0,156,100Zm-4.27,45.23a45,45,0,0,1-47.46,0,8,8,0,0,0-8.54,13.54,61,61,0,0,0,64.54,0,8,8,0,0,0-8.54-13.54ZM216,80v96a32.06,32.06,0,0,1-24,31v17a16,16,0,0,1-16,16H80a16,16,0,0,1-16-16V207a32.06,32.06,0,0,1-24-31V80A32,32,0,0,1,72,48H88V32a16,16,0,0,1,16-16h48a16,16,0,0,1,16,16V48h16A32,32,0,0,1,216,80ZM104,48h48V32H104Zm72,176V208H80v16ZM200,80a16,16,0,0,0-16-16H72A16,16,0,0,0,56,80v96a16,16,0,0,0,16,16H184a16,16,0,0,0,16-16Z"></path></svg>
                     Players
                  </a>
               </li>
               <% } %>
               <% if (features.includes('worlds')) { %>
                <li class="transition">
                  <a href="/server/<%= server.UUID %>/worlds" class="block w-full text-left px-3 py-1.5 rounded-lg transition border border-transparent hover:bg-neutral-100 dark:hover:bg-white/5 hover:text-neutral-900 dark:hover:text-white hover:shadow data-[active=true]:bg-neutral-200 data-[active=true]:border-neutral-300 dark:data-[active=true]:bg-white/10 dark:data-[active=true]:border-neutral-300/20 data-[active=true]:text-neutral-900 dark:data-[active=true]:text-white data-[active=true]:font-medium data-[active=true]:shadow-sm">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-5 mb-0.5 inline-flex mr-1">
                      <path stroke-linecap="round" stroke-linejoin="round" d="m20.893 13.393-1.135-1.135a2.252 2.252 0 0 1-.421-.585l-1.08-2.16a.414.414 0 0 0-.663-.107.827.827 0 0 1-.812.21l-1.273-.363a.89.89 0 0 0-.738 1.595l.587.39c.59.395.674 1.23.172 1.732l-.2.2c-.212.212-.33.498-.33.796v.41c0 .409-.11.809-.32 1.158l-1.315 2.191a2.11 2.11 0 0 1-1.81 1.025 1.055 1.055 0 0 1-1.055-1.055v-1.172c0-.92-.56-1.747-1.414-2.089l-.655-.261a2.25 2.25 0 0 1-1.383-2.46l.007-.042a2.25 2.25 0 0 1 .29-.787l.09-.15a2.25 2.25 0 0 1 2.37-1.048l1.178.236a1.125 1.125 0 0 0 1.302-.795l.208-.73a1.125 1.125 0 0 0-.578-1.315l-.665-.332-.091.091a2.25 2.25 0 0 1-1.591.659h-.18c-.249 0-.487.1-.662.274a.931.931 0 0 1-1.458-1.137l1.411-2.353a2.25 2.25 0 0 0 .286-.76m11.928 9.869A9 9 0 0 0 8.965 3.525m11.928 9.868A9 9 0 1 1 8.965 3.525" />
                    </svg>
                     Worlds
                  </a>
               </li>
               <% } %>
               <li class="transition">
                <a href="/server/<%= server.UUID %>/startup" class="block w-full text-left px-3 py-1.5 rounded-lg transition border border-transparent hover:bg-neutral-100 dark:hover:bg-white/5 hover:text-neutral-900 dark:hover:text-white hover:shadow data-[active=true]:bg-neutral-200 data-[active=true]:border-neutral-300 dark:data-[active=true]:bg-white/10 dark:data-[active=true]:border-neutral-300/20 data-[active=true]:text-neutral-900 dark:data-[active=true]:text-white data-[active=true]:font-medium data-[active=true]:shadow-sm">
                 <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-5 mb-0.5 inline-flex mr-1">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.347a1.125 1.125 0 0 1 0 1.972l-11.54 6.347a1.125 1.125 0 0 1-1.667-.986V5.653Z" />
                </svg>

                   Startup
                </a>
             </li>
             <li class="transition">
                <a href="/server/<%= server.UUID %>/settings" class="block w-full text-left px-3 py-1.5 rounded-lg transition border border-transparent hover:bg-neutral-100 dark:hover:bg-white/5 hover:text-neutral-900 dark:hover:text-white hover:shadow data-[active=true]:bg-neutral-200 data-[active=true]:border-neutral-300 dark:data-[active=true]:bg-white/10 dark:data-[active=true]:border-neutral-300/20 data-[active=true]:text-neutral-900 dark:data-[active=true]:text-white data-[active=true]:font-medium data-[active=true]:shadow-sm">
                 <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-5 mb-0.5 inline-flex mr-1">
                   <path fill-rule="evenodd" d="M11.078 2.25c-.917 0-1.699.663-1.85 1.567L9.05 4.889c-.02.12-.115.26-.297.348a7.493 7.493 0 0 0-.986.57c-.166.115-.334.126-.45.083L6.3 5.508a1.875 1.875 0 0 0-2.282.819l-.922 1.597a1.875 1.875 0 0 0 .432 2.385l.84.692c.095.078.17.229.154.43a7.598 7.598 0 0 0 0 1.139c.015.2-.059.352-.153.43l-.841.692a1.875 1.875 0 0 0-.432 2.385l.922 1.597a1.875 1.875 0 0 0 2.282.818l1.019-.382c.115-.043.283-.031.45.082.312.214.641.405.985.57.182.088.277.228.297.35l.178 1.071c.151.904.933 1.567 1.85 1.567h1.844c.916 0 1.699-.663 1.85-1.567l.178-1.072c.02-.12.114-.26.297-.349.344-.165.673-.356.985-.57.167-.114.335-.125.45-.082l1.02.382a1.875 1.875 0 0 0 2.28-.819l.923-1.597a1.875 1.875 0 0 0-.432-2.385l-.84-.692c-.095-.078-.17-.229-.154-.43a7.614 7.614 0 0 0 0-1.139c-.016-.2.059-.352.153-.43l.84-.692c.708-.582.891-1.59.433-2.385l-.922-1.597a1.875 1.875 0 0 0-2.282-.818l-1.02.382c-.114.043-.282.031-.449-.083a7.49 7.49 0 0 0-.985-.57c-.183-.087-.277-.227-.297-.348l-.179-1.072a1.875 1.875 0 0 0-1.85-1.567h-1.843ZM12 15.75a3.75 3.75 0 1 0 0-7.5 3.75 3.75 0 0 0 0 7.5Z" clip-rule="evenodd" />
                 </svg>
                   Settings
                </a>
             </li>
             <% } else {
                mobMenuItems.forEach(item => {
                  if (item.feature && !features.includes(item.feature)) return;
                  const url = item.url.replace(':uuid', server.UUID);
             %>
                <li class="transition">
                  <a href="<%= url %>" class="block w-full text-left px-3 py-1.5 rounded-lg transition border border-transparent hover:bg-neutral-100 dark:hover:bg-white/5 hover:text-neutral-900 dark:hover:text-white hover:shadow data-[active=true]:bg-neutral-200 data-[active=true]:border-neutral-300 dark:data-[active=true]:bg-white/10 dark:data-[active=true]:border-neutral-300/20 data-[active=true]:text-neutral-900 dark:data-[active=true]:text-white data-[active=true]:font-medium data-[active=true]:shadow-sm">
                    <%- item.icon %>
                    <%= item.label %>
                  </a>
                </li>
             <% }); } %>
             </ul>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const openBtn = document.getElementById("mobileMenuToggle");
    const closeBtn = document.getElementById("closeMobileMenu");
    const overlay = document.getElementById("mobileMenuOverlay");

    openBtn.addEventListener("click", () => overlay.classList.remove("hidden"));
    closeBtn.addEventListener("click", () => overlay.classList.add("hidden"));
    overlay.addEventListener("click", e => {
      if (e.target === overlay) overlay.classList.add("hidden");
    });
  });
</script>


      <!-- Page Header -->
      <header class="sm:flex sm:items-center px-8 pt-4">
        <%- include('../../components/serverHeader') %>
      </header>

      <%- include('../../components/installHeader') %>

      <!-- Server Template -->
      <%- include('../../components/serverTemplate') %>

      <!-- Server Settings -->
      <div class="px-8 mt-8">
        <div class="bg-white/5 rounded-xl p-6 shadow-lg border border-neutral-800/20">
          <h2 class="text-lg font-semibold mb-4 text-white">Server Settings</h2>
          <p class="text-sm text-neutral-400 mb-4">Configure your server's basic settings.</p>

          <form id="serverSettingsForm">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label for="serverName" class="block text-sm font-medium text-neutral-300 mb-2">Server Name</label>
                <input type="text" id="serverName" name="name" value="<%= server.name %>" class="w-full rounded-xl focus:ring focus:ring-neutral-800/10 focus:border-neutral-800/20 text-white text-sm px-4 py-2 bg-neutral-600/20 border border-white/5">
              </div>

              <div>
                <label for="serverDescription" class="block text-sm font-medium text-neutral-300 mb-2">Description</label>
                <input type="text" id="serverDescription" name="description" value="<%= server.description || '' %>" class="w-full rounded-xl focus:ring focus:ring-neutral-800/10 focus:border-neutral-800/20 text-white text-sm px-4 py-2 bg-neutral-600/20 border border-white/5">
              </div>
            </div>

            <div class="mt-6">
              <button type="submit" class="rounded-xl bg-blue-600 px-4 py-2 text-center text-sm font-medium text-white shadow-lg hover:bg-blue-500 transition">Save Settings</button>
            </div>
          </form>
        </div>

        <!-- Server Information -->
        <div class="bg-white/5 rounded-xl p-6 shadow-lg border border-neutral-800/20 mt-8">
          <h2 class="text-lg font-semibold mb-4 text-white">Server Information</h2>

          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <h3 class="text-sm font-medium text-neutral-300 mb-2">Server ID</h3>
              <p class="text-neutral-400"><%= server.UUID %></p>
            </div>

            <div>
              <h3 class="text-sm font-medium text-neutral-300 mb-2">Created</h3>
              <p class="text-neutral-400"><%= new Date(server.createdAt).toLocaleString() %></p>
            </div>

            <div>
              <h3 class="text-sm font-medium text-neutral-300 mb-2">Node</h3>
              <p class="text-neutral-400"><%= server.node.name %></p>
            </div>

            <div>
              <h3 class="text-sm font-medium text-neutral-300 mb-2">Image</h3>
              <p class="text-neutral-400"><%= server.image.name || 'Unknown' %></p>
            </div>

            <div>
              <h3 class="text-sm font-medium text-neutral-300 mb-2">Memory</h3>
              <p class="text-neutral-400"><%= server.Memory %> GB</p>
            </div>

            <div>
              <h3 class="text-sm font-medium text-neutral-300 mb-2">CPU</h3>
              <p class="text-neutral-400"><%= server.Cpu * 100 %>%</p>
            </div>

            <div>
              <h3 class="text-sm font-medium text-neutral-300 mb-2">Storage</h3>
              <p class="text-neutral-400"><%= server.Storage %> GB</p>
            </div>

            <div>
              <h3 class="text-sm font-medium text-neutral-300 mb-2">Status</h3>
              <p class="text-neutral-400">
                <span class="inline-flex items-center rounded-md px-2 py-1 text-xs font-medium ring-1 ring-inset
                  <%= server.Suspended ? 'bg-yellow-600/10 text-yellow-400 ring-yellow-600/20' : 'bg-emerald-600/10 text-emerald-400 ring-emerald-600/20' %>">
                  <%= server.Suspended ? 'Suspended' : 'Active' %>
                </span>
              </p>
            </div>
          </div>
        </div>

        <!-- Danger Zone -->
        <div class="bg-red-950/20 rounded-xl p-6 shadow-lg border border-red-800/20 mt-8">
          <h2 class="text-lg font-semibold mb-4 text-white">Danger Zone</h2>

          <div class="flex items-center justify-between mb-6">
            <div>
              <h3 class="text-sm font-medium text-neutral-300">Restart Server</h3>
              <p class="text-sm text-neutral-400">Force a restart of your server</p>
            </div>
            <button id="restartButton" type="button" class="w-full md:w-auto rounded-xl bg-red-600 hover:bg-red-500 text-white px-3 py-2 text-sm font-medium shadow-md transition focus:outline focus:outline-2 focus:outline-offset-2">Restart</button>
          </div>

          <div class="flex items-center justify-between">
            <div>
              <h3 class="text-sm font-medium text-neutral-300">Reinstall Server</h3>
              <p class="text-sm text-neutral-400">Reinstall your server from scratch (all data will be lost)</p>
            </div>
            <button id="reinstallButton" type="button" class="w-full md:w-auto rounded-xl bg-red-600 hover:bg-red-500 text-white px-3 py-2 text-sm font-medium shadow-md transition focus:outline focus:outline-2 focus:outline-offset-2">Reinstall</button>
          </div>
        </div>
      </div>
    </section>
  </div>
</main>

<%- include('../../components/toast') %>
<%- include('../../components/loadingPopup') %>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const serverSettingsForm = document.getElementById('serverSettingsForm');
    const restartButton = document.getElementById('restartButton');
    const reinstallButton = document.getElementById('reinstallButton');

    serverSettingsForm.addEventListener('submit', function(e) {
      e.preventDefault();

      const formData = new FormData(serverSettingsForm);
      const settings = {
        name: formData.get('name'),
        description: formData.get('description')
      };

      const loader = showLoadingPopup('Updating Server Settings', 'Saving your changes...');

      fetch(`/server/<%= server.UUID %>/settings`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(settings),
      })
      .then(response => response.json())
      .then(data => {
        loader.close();
        if (data.success) {
          showToast('Server settings updated successfully!', 'success');
          setTimeout(() => window.location.reload(), 1500);
        } else {
          showToast('Failed to update server settings: ' + (data.error || 'Unknown error'), 'error');
        }
      })
      .catch(error => {
        loader.close();
        console.error('Error:', error);
        showToast('An error occurred while updating the server settings.', 'error');
      });
    });

    // Restart confirmation modal
    const createRestartModal = () => {
      const modal = document.createElement('div');
      modal.className = 'fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center opacity-0 pointer-events-none transition-opacity duration-300';
      modal.id = 'restartModal';

      modal.innerHTML = `
        <div class="bg-white rounded-xl p-8 max-w-md w-full transform scale-95 transition-transform duration-300">
          <h2 class="text-2xl font-medium mb-1 text-neutral-800">Confirm Restart</h2>
          <p class="mb-6 text-neutral-600">Are you sure you want to restart the server? This will disconnect all users.</p>
          <div class="flex justify-end space-x-4">
            <button id="cancelRestartBtn" class="px-5 py-2 bg-neutral-200 text-neutral-800 rounded-xl hover:bg-neutral-300 transition">Cancel</button>
            <button id="confirmRestartBtn" class="w-full md:w-auto rounded-xl bg-red-600 hover:bg-red-500 text-white px-3 py-2 text-sm font-medium shadow-md transition focus:outline focus:outline-2 focus:outline-offset-2">Restart</button>
          </div>
        </div>
      `;

      document.body.appendChild(modal);

      setTimeout(() => {
        modal.classList.remove('opacity-0', 'pointer-events-none');
        modal.querySelector('div').classList.remove('scale-95');
        modal.querySelector('div').classList.add('scale-100');
      }, 10);

      document.getElementById('cancelRestartBtn').addEventListener('click', () => {
        modal.classList.add('opacity-0', 'pointer-events-none');
        modal.querySelector('div').classList.remove('scale-100');
        modal.querySelector('div').classList.add('scale-95');
        setTimeout(() => document.body.removeChild(modal), 300);
      });

      document.getElementById('confirmRestartBtn').addEventListener('click', () => {
        modal.classList.add('opacity-0', 'pointer-events-none');
        modal.querySelector('div').classList.remove('scale-100');
        modal.querySelector('div').classList.add('scale-95');
        setTimeout(() => document.body.removeChild(modal), 300);

        const loader = showLoadingPopup('Restarting Server', 'Initiating server restart...');

        fetch(`/server/<%= server.UUID %>/power/restart`, {
          method: 'POST',
        })
        .then(response => response.json())
        .then(data => {
          loader.close();
          if (data.success || data.message) {
            showToast('Server restart initiated.', 'success');
          } else {
            showToast('Failed to restart server: ' + (data.error || 'Unknown error'), 'error');
          }
        })
        .catch(error => {
          loader.close();
          console.error('Error:', error);
          showToast('An error occurred while restarting the server.', 'error');
        });
      });
    };

    restartButton.addEventListener('click', createRestartModal);

    // Reinstall confirmation modal
    const createReinstallModal = () => {
      const modal = document.createElement('div');
      modal.className = 'fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center opacity-0 pointer-events-none transition-opacity duration-300';
      modal.id = 'reinstallModal';

      modal.innerHTML = `
        <div class="bg-white rounded-xl p-8 max-w-md w-full transform scale-95 transition-transform duration-300">
          <h2 class="text-2xl font-medium mb-1 text-neutral-800">Confirm Reinstallation</h2>
          <p class="mb-2 text-neutral-600">WARNING: Are you sure you want to reinstall the server?</p>
          <p class="mb-6 text-red-500 font-medium">This will DELETE ALL DATA and reinstall the server from scratch. This action cannot be undone.</p>
          <div class="flex justify-end space-x-4">
            <button id="cancelReinstallBtn" class="px-5 py-2 bg-neutral-200 text-neutral-800 rounded-xl hover:bg-neutral-300 transition">Cancel</button>
            <button id="confirmReinstallBtn" class="w-full md:w-auto rounded-xl bg-red-600 hover:bg-red-500 text-white px-3 py-2 text-sm font-medium shadow-md transition focus:outline focus:outline-2 focus:outline-offset-2">Reinstall</button>
          </div>
        </div>
      `;

      document.body.appendChild(modal);

      setTimeout(() => {
        modal.classList.remove('opacity-0', 'pointer-events-none');
        modal.querySelector('div').classList.remove('scale-95');
        modal.querySelector('div').classList.add('scale-100');
      }, 10);

      document.getElementById('cancelReinstallBtn').addEventListener('click', () => {
        modal.classList.add('opacity-0', 'pointer-events-none');
        modal.querySelector('div').classList.remove('scale-100');
        modal.querySelector('div').classList.add('scale-95');
        setTimeout(() => document.body.removeChild(modal), 300);
      });

      document.getElementById('confirmReinstallBtn').addEventListener('click', () => {
        // Create final warning modal
        const finalWarningModal = document.createElement('div');
        finalWarningModal.className = 'fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center opacity-0 pointer-events-none transition-opacity duration-300';
        finalWarningModal.id = 'finalWarningModal';

        finalWarningModal.innerHTML = `
          <div class="bg-white rounded-xl p-8 max-w-md w-full transform scale-95 transition-transform duration-300">
            <h2 class="text-2xl font-medium mb-1 text-neutral-800">FINAL WARNING</h2>
            <p class="mb-6 text-red-500 font-medium">All server data will be permanently deleted. Continue with reinstallation?</p>
            <div class="flex justify-end space-x-4">
              <button id="cancelFinalWarningBtn" class="px-5 py-2 bg-neutral-200 text-neutral-800 rounded-xl hover:bg-neutral-300 transition">Cancel</button>
              <button id="confirmFinalWarningBtn" class="w-full md:w-auto rounded-xl bg-red-600 hover:bg-red-500 text-white px-3 py-2 text-sm font-medium shadow-md transition focus:outline focus:outline-2 focus:outline-offset-2">Proceed</button>
            </div>
          </div>
        `;

        // Close first modal
        modal.classList.add('opacity-0', 'pointer-events-none');
        modal.querySelector('div').classList.remove('scale-100');
        modal.querySelector('div').classList.add('scale-95');
        setTimeout(() => document.body.removeChild(modal), 300);

        // Show final warning modal
        document.body.appendChild(finalWarningModal);
        setTimeout(() => {
          finalWarningModal.classList.remove('opacity-0', 'pointer-events-none');
          finalWarningModal.querySelector('div').classList.remove('scale-95');
          finalWarningModal.querySelector('div').classList.add('scale-100');
        }, 10);

        document.getElementById('cancelFinalWarningBtn').addEventListener('click', () => {
          finalWarningModal.classList.add('opacity-0', 'pointer-events-none');
          finalWarningModal.querySelector('div').classList.remove('scale-100');
          finalWarningModal.querySelector('div').classList.add('scale-95');
          setTimeout(() => document.body.removeChild(finalWarningModal), 300);
        });

        document.getElementById('confirmFinalWarningBtn').addEventListener('click', () => {
          finalWarningModal.classList.add('opacity-0', 'pointer-events-none');
          finalWarningModal.querySelector('div').classList.remove('scale-100');
          finalWarningModal.querySelector('div').classList.add('scale-95');
          setTimeout(() => document.body.removeChild(finalWarningModal), 300);

          const loader = showLoadingPopup('Reinstalling Server', 'Initiating server reinstallation...');
          loader.updateProgress(10, 'Preparing for reinstallation...');

          fetch(`/server/<%= server.UUID %>/reinstall`, {
            method: 'POST',
          })
          .then(response => response.json())
          .then(data => {
            loader.updateProgress(100, 'Reinstallation initiated!');
            setTimeout(() => {
              loader.close();
              if (data.success) {
                showToast('Server reinstallation initiated. This may take a few minutes to complete.', 'success');
              } else {
                showToast('Failed to reinstall server: ' + (data.error || 'Unknown error'), 'error');
              }
            }, 1000);
          })
          .catch(error => {
            loader.close();
            console.error('Error:', error);
            showToast('An error occurred while reinstalling the server.', 'error');
          });
        });
      });
    };

    reinstallButton.addEventListener('click', createReinstallModal);
  });
</script>
