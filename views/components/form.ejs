<form class="bg-white dark:bg-neutral-900 rounded-lg shadow-sm p-6 space-y-6" novalidate>
	<!-- Text Input -->
	<div>
		<label for="name" class="block text-sm font-medium text-neutral-700 dark:text-neutral-300 mb-1">Name</label>
		<input type="text" id="name" name="name" required
			class="w-full px-4 py-2 rounded-lg bg-neutral-100 dark:bg-neutral-800 text-neutral-700 dark:text-neutral-200 border border-transparent focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
			placeholder="Enter your name">
		<p class="mt-1 text-sm text-red-600 hidden"></p>
	</div>

	<!-- Email Input -->
	<div>
		<label for="email" class="block text-sm font-medium text-neutral-700 dark:text-neutral-300 mb-1">Email</label>
		<input type="email" id="email" name="email" required
			class="w-full px-4 py-2 rounded-lg bg-neutral-100 dark:bg-neutral-800 text-neutral-700 dark:text-neutral-200 border border-transparent focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
			placeholder="Enter your email">
		<p class="mt-1 text-sm text-red-600 hidden"></p>
	</div>

	<!-- Password Input with Toggle -->
	<div>
		<label for="password" class="block text-sm font-medium text-neutral-700 dark:text-neutral-300 mb-1">Password</label>
		<div class="relative">
			<input type="password" id="password" name="password" required
				class="w-full px-4 py-2 rounded-lg bg-neutral-100 dark:bg-neutral-800 text-neutral-700 dark:text-neutral-200 border border-transparent focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
				placeholder="Enter your password">
			<button type="button" class="absolute right-3 top-2.5 text-neutral-400 hover:text-neutral-600 dark:hover:text-neutral-300" onclick="togglePassword()">
				<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" id="passwordToggleIcon">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
				</svg>
			</button>
		</div>
		<p class="mt-1 text-sm text-red-600 hidden"></p>
	</div>

	<!-- Select Input -->
	<div>
		<label for="role" class="block text-sm font-medium text-neutral-700 dark:text-neutral-300 mb-1">Role</label>
		<select id="role" name="role" required
			class="w-full px-4 py-2 rounded-lg bg-neutral-100 dark:bg-neutral-800 text-neutral-700 dark:text-neutral-200 border border-transparent focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
			<option value="">Select a role</option>
			<option value="admin">Admin</option>
			<option value="user">User</option>
			<option value="guest">Guest</option>
		</select>
		<p class="mt-1 text-sm text-red-600 hidden"></p>
	</div>

	<!-- Checkbox Group -->
	<div>
		<span class="block text-sm font-medium text-neutral-700 dark:text-neutral-300 mb-2">Permissions</span>
		<div class="space-y-2">
			<label class="flex items-center">
				<input type="checkbox" name="permissions" value="read"
					class="w-4 h-4 text-blue-500 border-neutral-300 rounded focus:ring-blue-500">
				<span class="ml-2 text-sm text-neutral-700 dark:text-neutral-300">Read</span>
			</label>
			<label class="flex items-center">
				<input type="checkbox" name="permissions" value="write"
					class="w-4 h-4 text-blue-500 border-neutral-300 rounded focus:ring-blue-500">
				<span class="ml-2 text-sm text-neutral-700 dark:text-neutral-300">Write</span>
			</label>
			<label class="flex items-center">
				<input type="checkbox" name="permissions" value="delete"
					class="w-4 h-4 text-blue-500 border-neutral-300 rounded focus:ring-blue-500">
				<span class="ml-2 text-sm text-neutral-700 dark:text-neutral-300">Delete</span>
			</label>
		</div>
	</div>

	<!-- Submit Button -->
	<div class="flex justify-end">
		<button type="submit"
			class="px-4 py-2 bg-blue-500 text-white font-medium rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-neutral-900">
			Submit
		</button>
	</div>
</form>

<script>
	const form = document.querySelector('form');
	const inputs = form.querySelectorAll('input[required], select[required]');

	// Form validation
	form.addEventListener('submit', (e) => {
		e.preventDefault();
		let isValid = true;

		inputs.forEach(input => {
			const errorElement = input.nextElementSibling;
			if (!input.value) {
				isValid = false;
				input.classList.add('border-red-500');
				errorElement.textContent = `${input.name.charAt(0).toUpperCase() + input.name.slice(1)} is required`;
				errorElement.classList.remove('hidden');
			} else {
				input.classList.remove('border-red-500');
				errorElement.classList.add('hidden');
			}

			if (input.type === 'email' && input.value && !isValidEmail(input.value)) {
				isValid = false;
				input.classList.add('border-red-500');
				errorElement.textContent = 'Please enter a valid email address';
				errorElement.classList.remove('hidden');
			}
		});

		if (isValid) {
			// Handle form submission
			console.log('Form submitted successfully');
		}
	});

	// Input validation on change
	inputs.forEach(input => {
		input.addEventListener('input', () => {
			const errorElement = input.nextElementSibling;
			if (input.value) {
				input.classList.remove('border-red-500');
				errorElement.classList.add('hidden');
			}
		});
	});

	// Password toggle
	function togglePassword() {
		const passwordInput = document.getElementById('password');
		const passwordToggleIcon = document.getElementById('passwordToggleIcon');
		
		if (passwordInput.type === 'password') {
			passwordInput.type = 'text';
			passwordToggleIcon.innerHTML = `
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21"></path>
			`;
		} else {
			passwordInput.type = 'password';
			passwordToggleIcon.innerHTML = `
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
			`;
		}
	}

	function isValidEmail(email) {
		return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
	}
</script>