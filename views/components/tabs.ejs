<div class="tabs-component">
	<!-- Tab Navigation -->
	<div class="border-b dark:border-neutral-800">
		<nav class="flex space-x-4" aria-label="Tabs" role="tablist" id="tabList">
			<% tabs.forEach((tab, index) => { %>
				<button 
					id="tab-<%= tab.id %>"
					class="px-3 py-2 text-sm font-medium rounded-t-lg focus:outline-none <%= index === 0 ? 'text-blue-600 dark:text-blue-500 border-b-2 border-blue-600 dark:border-blue-500' : 'text-neutral-500 dark:text-neutral-400 hover:text-neutral-700 dark:hover:text-neutral-300' %>"
					role="tab"
					aria-controls="panel-<%= tab.id %>"
					aria-selected="<%= index === 0 ? 'true' : 'false' %>"
					onclick="switchTab(event, '<%= tab.id %>')">
					<% if (tab.icon) { %>
						<div class="flex items-center space-x-2">
							<%- tab.icon %>
							<span><%= tab.label %></span>
						</div>
					<% } else { %>
						<%= tab.label %>
					<% } %>
				</button>
			<% }); %>
		</nav>
	</div>

	<!-- Tab Panels -->
	<div class="mt-4">
		<% tabs.forEach((tab, index) => { %>
			<div 
				id="panel-<%= tab.id %>"
				class="tab-panel <%= index === 0 ? '' : 'hidden' %>"
				role="tabpanel"
				aria-labelledby="tab-<%= tab.id %>">
				<%= tab.content %>
			</div>
		<% }); %>
	</div>
</div>

<script>
	function switchTab(event, tabId) {
		// Get all tabs and panels
		const tabs = document.querySelectorAll('[role="tab"]');
		const panels = document.querySelectorAll('[role="tabpanel"]');
		
		// Remove active states from all tabs
		tabs.forEach(tab => {
			tab.classList.remove('text-blue-600', 'dark:text-blue-500', 'border-b-2', 'border-blue-600', 'dark:border-blue-500');
			tab.classList.add('text-neutral-500', 'dark:text-neutral-400', 'hover:text-neutral-700', 'dark:hover:text-neutral-300');
			tab.setAttribute('aria-selected', 'false');
		});
		
		// Hide all panels
		panels.forEach(panel => {
			panel.classList.add('hidden');
		});
		
		// Activate the selected tab
		const selectedTab = document.getElementById(`tab-${tabId}`);
		selectedTab.classList.remove('text-neutral-500', 'dark:text-neutral-400', 'hover:text-neutral-700', 'dark:hover:text-neutral-300');
		selectedTab.classList.add('text-blue-600', 'dark:text-blue-500', 'border-b-2', 'border-blue-600', 'dark:border-blue-500');
		selectedTab.setAttribute('aria-selected', 'true');
		
		// Show the selected panel
		const selectedPanel = document.getElementById(`panel-${tabId}`);
		selectedPanel.classList.remove('hidden');

		// Emit custom event
		const tabChangeEvent = new CustomEvent('tabChange', {
			detail: { tabId: tabId }
		});
		document.dispatchEvent(tabChangeEvent);
	}

	// Optional: Add keyboard navigation
	document.getElementById('tabList').addEventListener('keydown', (e) => {
		const tabs = Array.from(document.querySelectorAll('[role="tab"]'));
		const currentTab = document.activeElement;
		const currentIndex = tabs.indexOf(currentTab);
		
		let newIndex;
		switch (e.key) {
			case 'ArrowLeft':
				newIndex = currentIndex > 0 ? currentIndex - 1 : tabs.length - 1;
				break;
			case 'ArrowRight':
				newIndex = currentIndex < tabs.length - 1 ? currentIndex + 1 : 0;
				break;
			default:
				return;
		}
		
		tabs[newIndex].focus();
		tabs[newIndex].click();
		e.preventDefault();
	});
</script>

<!-- Example usage:
<%
const tabs = [
	{
		id: 'overview',
		label: 'Overview',
		icon: '<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path></svg>',
		content: 'Overview content here'
	},
	{
		id: 'analytics',
		label: 'Analytics',
		icon: '<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path></svg>',
		content: 'Analytics content here'
	}
];
%>
-->