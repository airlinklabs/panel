<!-- Server Configuration Popups -->
<template id="serverConfigPopup">
	<div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4">
		<div class="bg-white dark:bg-neutral-900 rounded-lg shadow-xl max-w-2xl w-full transform transition-all">
			<div class="flex items-center justify-between p-6 border-b dark:border-neutral-800">
				<h3 class="text-lg font-semibold text-neutral-900 dark:text-white">Server Configuration</h3>
				<button class="close-btn text-neutral-400 hover:text-neutral-500 dark:hover:text-neutral-300">
					<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
					</svg>
				</button>
			</div>

			<div class="p-6">
				<form class="space-y-6">
					<!-- Basic Settings -->
					<div class="space-y-4">
						<h4 class="text-sm font-medium text-neutral-700 dark:text-neutral-300">Basic Settings</h4>
						<div class="grid grid-cols-2 gap-4">
							<div>
								<label class="block text-sm font-medium text-neutral-700 dark:text-neutral-300 mb-1">Server Name</label>
								<input type="text" name="serverName" class="w-full px-3 py-2 border border-neutral-300 dark:border-neutral-700 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 bg-white dark:bg-neutral-800 text-neutral-900 dark:text-white">
							</div>
							<div>
								<label class="block text-sm font-medium text-neutral-700 dark:text-neutral-300 mb-1">Port</label>
								<input type="number" name="port" class="w-full px-3 py-2 border border-neutral-300 dark:border-neutral-700 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 bg-white dark:bg-neutral-800 text-neutral-900 dark:text-white">
							</div>
						</div>
					</div>

					<!-- Performance Settings -->
					<div class="space-y-4">
						<h4 class="text-sm font-medium text-neutral-700 dark:text-neutral-300">Performance Settings</h4>
						<div class="grid grid-cols-2 gap-4">
							<div>
								<label class="block text-sm font-medium text-neutral-700 dark:text-neutral-300 mb-1">Max Connections</label>
								<input type="number" name="maxConnections" class="w-full px-3 py-2 border border-neutral-300 dark:border-neutral-700 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 bg-white dark:bg-neutral-800 text-neutral-900 dark:text-white">
							</div>
							<div>
								<label class="block text-sm font-medium text-neutral-700 dark:text-neutral-300 mb-1">Timeout (seconds)</label>
								<input type="number" name="timeout" class="w-full px-3 py-2 border border-neutral-300 dark:border-neutral-700 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 bg-white dark:bg-neutral-800 text-neutral-900 dark:text-white">
							</div>
						</div>
					</div>

					<!-- Security Settings -->
					<div class="space-y-4">
						<h4 class="text-sm font-medium text-neutral-700 dark:text-neutral-300">Security Settings</h4>
						<div class="space-y-4">
							<div>
								<label class="block text-sm font-medium text-neutral-700 dark:text-neutral-300 mb-1">SSL Certificate</label>
								<div class="flex space-x-2">
									<input type="text" name="sslCert" class="flex-1 px-3 py-2 border border-neutral-300 dark:border-neutral-700 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 bg-white dark:bg-neutral-800 text-neutral-900 dark:text-white" placeholder="Path to SSL certificate">
									<button type="button" class="px-4 py-2 bg-neutral-100 dark:bg-neutral-800 text-neutral-700 dark:text-neutral-300 rounded-lg hover:bg-neutral-200 dark:hover:bg-neutral-700">
										Browse
									</button>
								</div>
							</div>
							<div class="flex items-center">
								<input type="checkbox" name="enableFirewall" class="h-4 w-4 text-blue-500 focus:ring-blue-500 border-neutral-300 dark:border-neutral-700 rounded">
								<label class="ml-2 text-sm text-neutral-700 dark:text-neutral-300">Enable Firewall</label>
							</div>
						</div>
					</div>

					<!-- Advanced Settings -->
					<div class="space-y-4">
						<h4 class="text-sm font-medium text-neutral-700 dark:text-neutral-300">Advanced Settings</h4>
						<div class="space-y-4">
							<div>
								<label class="block text-sm font-medium text-neutral-700 dark:text-neutral-300 mb-1">Environment Variables</label>
								<textarea name="envVars" rows="3" class="w-full px-3 py-2 border border-neutral-300 dark:border-neutral-700 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 bg-white dark:bg-neutral-800 text-neutral-900 dark:text-white" placeholder="KEY=value"></textarea>
							</div>
							<div>
								<label class="block text-sm font-medium text-neutral-700 dark:text-neutral-300 mb-1">Startup Command</label>
								<input type="text" name="startupCmd" class="w-full px-3 py-2 border border-neutral-300 dark:border-neutral-700 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 bg-white dark:bg-neutral-800 text-neutral-900 dark:text-white">
							</div>
						</div>
					</div>
				</form>
			</div>

			<div class="px-6 py-4 bg-neutral-50 dark:bg-neutral-800 border-t dark:border-neutral-700 flex justify-end space-x-3">
				<button class="cancel-btn px-4 py-2 text-neutral-700 dark:text-neutral-300 hover:bg-neutral-100 dark:hover:bg-neutral-700 rounded-lg">
					Cancel
				</button>
				<button class="save-btn px-4 py-2 bg-blue-500 text-white hover:bg-blue-600 rounded-lg">
					Save Changes
				</button>
			</div>
		</div>
	</div>
</template>

<script>
	class ServerConfigPopupManager extends ServerPopupManager {
		showServerConfig(serverId, config = {}, onSave) {
			const template = document.getElementById('serverConfigPopup');
			const popup = template.content.cloneNode(true);
			const wrapper = document.createElement('div');
			wrapper.appendChild(popup);

			// Populate form with existing config
			const form = wrapper.querySelector('form');
			Object.entries(config).forEach(([key, value]) => {
				const input = form.elements[key];
				if (input) {
					if (input.type === 'checkbox') {
						input.checked = value;
					} else {
						input.value = value;
					}
				}
			});

			// Handle form submission
			wrapper.querySelector('.save-btn').addEventListener('click', () => {
				const formData = new FormData(form);
				const data = Object.fromEntries(formData.entries());
				data.enableFirewall = form.elements.enableFirewall.checked;

				if (onSave) {
					onSave(data);
				}
				this.closePopup(wrapper);
			});

			// Handle cancel
			wrapper.querySelector('.cancel-btn').addEventListener('click', () => {
				this.closePopup(wrapper);
			});

			// Handle close button
			wrapper.querySelector('.close-btn').addEventListener('click', () => {
				this.closePopup(wrapper);
			});

			this.showPopup(wrapper);
			return wrapper;
		}
	}

	// Initialize server config popup manager
	const serverConfigPopupManager = new ServerConfigPopupManager();

	// Example usage:
	/*
	serverConfigPopupManager.showServerConfig('server123', {
		serverName: 'Production Server',
		port: 8080,
		maxConnections: 1000,
		timeout: 30,
		enableFirewall: true,
		startupCmd: 'npm start'
	}, (config) => {
		console.log('Saving config:', config);
	});
	*/
</script>