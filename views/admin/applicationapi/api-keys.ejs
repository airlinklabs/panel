<div class="w-60 h-full">
	<%- include('../../components/template') %>
</div>

<div class="p-4 sm:p-6 lg:p-8">
	<div class="sm:flex sm:items-center">
		<div class="sm:flex-auto">
			<h1 class="text-2xl font-semibold text-neutral-900 dark:text-white">API Keys Management</h1>
			<p class="mt-2 text-sm text-neutral-700 dark:text-neutral-400">Manage API keys for application access and integration.</p>
		</div>
		<div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
			<button type="button" data-modal-target="createApiKeyModal" data-modal-toggle="createApiKeyModal" 
				class="flex items-center justify-center rounded-xl bg-neutral-900 dark:bg-white/10 px-3 py-2 text-sm font-semibold text-white dark:text-neutral-200 shadow-sm hover:bg-neutral-700 dark:hover:bg-white/20 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-neutral-600">
				<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 mr-2">
					<path stroke-linecap="round" stroke-linejoin="round" d="M12 4.5v15m7.5-7.5h-15" />
				</svg>
				Create API Key
			</button>
		</div>
	</div>

	<div class="mt-8 flow-root">
		<div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
			<div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
				<div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 dark:ring-white/10 rounded-xl">
					<table class="min-w-full divide-y divide-neutral-300 dark:divide-white/10">
						<thead class="bg-neutral-50 dark:bg-white/5">
					  <tr>
						<th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-neutral-900 dark:text-white sm:pl-6">Name</th>
						<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-neutral-900 dark:text-white">Description</th>
						<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-neutral-900 dark:text-white">Key</th>
						<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-neutral-900 dark:text-white">Status</th>
						<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-neutral-900 dark:text-white">Rate Limit</th>
						<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-neutral-900 dark:text-white">Expires</th>
						<th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6">
						  <span class="sr-only">Actions</span>
						</th>
					  </tr>
					</thead>
					<tbody class="divide-y divide-neutral-200 dark:divide-white/10 bg-white dark:bg-transparent">
					  <% apiKeys.forEach(key => { %>
						<tr>
						  <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-neutral-900 dark:text-white sm:pl-6"><%= key.name %></td>
						  <td class="whitespace-nowrap px-3 py-4 text-sm text-neutral-500 dark:text-neutral-400"><%= key.description %></td>
						  <td class="whitespace-nowrap px-3 py-4 text-sm text-neutral-500 dark:text-neutral-400">
							<div class="flex items-center gap-2">
							  <code class="bg-neutral-100 dark:bg-white/5 px-2 py-1 rounded-md font-mono text-xs"><%= key.key %></code>
							  <button onclick="copyToClipboard('<%= key.key %>')" class="text-neutral-500 hover:text-neutral-700 dark:text-neutral-400 dark:hover:text-white">
								<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
								  <path stroke-linecap="round" stroke-linejoin="round" d="M15.666 3.888A2.25 2.25 0 0 0 13.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 0 1-.75.75H9a.75.75 0 0 1-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 0 1-2.25 2.25H6.75A2.25 2.25 0 0 1 4.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 0 1 1.927-.184" />
								</svg>
							  </button>
							</div>
						  </td>
						  <td class="whitespace-nowrap px-3 py-4 text-sm">
							<span class="inline-flex items-center rounded-md px-2 py-1 text-xs font-medium <%= key.active ? 'bg-green-50 text-green-700 ring-1 ring-inset ring-green-600/20' : 'bg-red-50 text-red-700 ring-1 ring-inset ring-red-600/20' %>">
							  <%= key.active ? 'Active' : 'Inactive' %>
							</span>
						  </td>
						  <td class="whitespace-nowrap px-3 py-4 text-sm text-neutral-500 dark:text-neutral-400"><%= key.rateLimit %>/min</td>
						  <td class="whitespace-nowrap px-3 py-4 text-sm text-neutral-500 dark:text-neutral-400"><%= key.expiresAt ? new Date(key.expiresAt).toLocaleDateString() : 'Never' %></td>
						  <td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
							<div class="flex items-center justify-end gap-2">
							  <button onclick="editApiKey('<%= key.id %>')" class="text-neutral-600 hover:text-neutral-900 dark:text-neutral-400 dark:hover:text-white">
								<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
								  <path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10" />
								</svg>
							  </button>
							  <button onclick="toggleApiKey('<%= key.id %>', <%= key.active %>)" class="text-neutral-600 hover:text-neutral-900 dark:text-neutral-400 dark:hover:text-white">
								<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
								  <path stroke-linecap="round" stroke-linejoin="round" d="M5.636 5.636a9 9 0 1 0 12.728 12.728M12 3v9" />
								</svg>
							  </button>
							  <button onclick="deleteApiKey('<%= key.id %>')" class="text-red-600 hover:text-red-900">
								<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
								  <path stroke-linecap="round" stroke-linejoin="round" d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0" />
								</svg>
							  </button>
							</div>
						  </td>
						</tr>
					  <% }); %>
					</tbody>
				  </table>
				</div>
			  </div>
			</div>
		  </div>
		</div>

<!-- Create API Key Modal -->
<div class="modal fade" id="createApiKeyModal" tabindex="-1" role="dialog">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Create New API Key</h5>
				<button type="button" class="close" data-dismiss="modal">
					<span>&times;</span>
				</button>
			</div>
			<form id="createApiKeyForm">
				<div class="modal-body">
					<div class="form-group">
						<label>Name</label>
						<input type="text" class="form-control" name="name" required>
					</div>
					<div class="form-group">
						<label>Description</label>
						<textarea class="form-control" name="description"></textarea>
					</div>
					<div class="form-group">
						<label>Rate Limit (requests per minute)</label>
						<input type="number" class="form-control" name="rateLimit" value="60" min="1">
					</div>
					<div class="form-group">
						<label>IP Restrictions (comma-separated)</label>
						<input type="text" class="form-control" name="ipRestrictions" placeholder="e.g., 192.168.1.1, 10.0.0.1">
					</div>
					<div class="form-group">
						<label>Expires At</label>
						<input type="datetime-local" class="form-control" name="expiresAt">
					</div>
					
					<div class="form-group">
						<label>Permissions</label>
						<div class="table-responsive">
							<table class="table table-bordered">
								<thead>
									<tr>
										<th>Resource</th>
										<th>Access Level</th>
									</tr>
								</thead>
								<tbody>
									<% ['allocations', 'databases', 'images', 'locations', 'nests', 
										'eggs', 'nodes', 'server_databases', 'servers', 'users'].forEach(resource => { %>
										<tr>
											<td><%= resource.charAt(0).toUpperCase() + resource.slice(1).replace('_', ' ') %></td>
											<td>
												<select class="form-control" name="permissions[<%= resource %>]" required>
													<option value="none">None</option>
													<option value="read">Read</option>
													<option value="write">Read/Write</option>
												</select>
											</td>
										</tr>
									<% }); %>
								</tbody>
							</table>
						</div>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
					<button type="submit" class="btn btn-primary">Create API Key</button>
				</div>
			</form>
		</div>
	</div>
</div>

<!-- Edit API Key Modal -->
<div class="modal fade" id="editApiKeyModal" tabindex="-1" role="dialog">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Edit API Key</h5>
				<button type="button" class="close" data-dismiss="modal">
					<span>&times;</span>
				</button>
			</div>
			<form id="editApiKeyForm">
				<div class="modal-body">
					<!-- Same form fields as create modal -->
					<input type="hidden" name="keyId" id="editKeyId">
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
					<button type="submit" class="btn btn-primary">Save Changes</button>
				</div>
			</form>
		</div>
	</div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" role="dialog">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Confirm Deletion</h5>
				<button type="button" class="close" data-dismiss="modal">
					<span>&times;</span>
				</button>
			</div>
			<div class="modal-body">
				Are you sure you want to delete this API key? This action cannot be undone.
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
				<button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
			</div>
		</div>
	</div>
</div>

<script>
function copyToClipboard(text) {
	navigator.clipboard.writeText(text).then(() => {
		showToast('API key copied to clipboard!', 'success');
	});
}

document.addEventListener('DOMContentLoaded', function() {
	// Form submission handling
	document.getElementById('createApiKeyForm').addEventListener('submit', async function(e) {
		e.preventDefault();
		const formData = new FormData(this);
		const data = Object.fromEntries(formData.entries());
		
		try {
			const response = await fetch('/admin/api/keys', {
				method: 'POST',
				headers: { 'Content-Type': 'application/json' },
				body: JSON.stringify(data)
			});
			
			if (response.ok) {
				showToast('API key created successfully!', 'success');
				location.reload();
			} else {
				throw new Error('Failed to create API key');
			}
		} catch (error) {
			showToast('Error creating API key', 'error');
		}
	});
});

function editApiKey(id) {
	// Populate and show edit modal
	const modal = document.getElementById('editApiKeyModal');
	if (modal) {
		modal.classList.add('show');
		modal.style.display = 'block';
	}
}

function toggleApiKey(id, currentState) {
	fetch(`/admin/api/keys/${id}/toggle`, {
		method: 'POST',
		headers: { 'Content-Type': 'application/json' }
	})
	.then(response => {
		if (response.ok) {
			showToast(`API key ${currentState ? 'deactivated' : 'activated'} successfully!`, 'success');
			location.reload();
		}
	})
	.catch(() => showToast('Error toggling API key status', 'error'));
}

function deleteApiKey(id) {
	const modal = document.getElementById('deleteConfirmModal');
	if (modal) {
		modal.classList.add('show');
		modal.style.display = 'block';
		document.getElementById('confirmDelete').onclick = function() {
			fetch(`/admin/api/keys/${id}`, { method: 'DELETE' })
				.then(response => {
					if (response.ok) {
						showToast('API key deleted successfully!', 'success');
						location.reload();
					}
				})
				.catch(() => showToast('Error deleting API key', 'error'));
		};
	}
}

function showToast(message, type) {
	Swal.fire({
		toast: true,
		position: 'top-end',
		showConfirmButton: false,
		timer: 3000,
		icon: type,
		title: message
	});
}
</script>

<%- include('../../components/toast') %>

<div class="w-60 h-full">
	<%- include('../../components/footer') %>
</div>